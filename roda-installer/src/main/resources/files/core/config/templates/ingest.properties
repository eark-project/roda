#
# Configuration file for RODA ingest manager/tasks
#

# Database configuration values
jdbcDriver = com.mysql.jdbc.Driver
jdbcURL = jdbc:mysql://RODADATA_MYSQL_HOST:RODADATA_MYSQL_PORT/RODADATA_MYSQL_DB
jdbcUsername = roda-core
jdbcPassword = RODADATA_MYSQL_RODACORE_PASSWD

# The location of the temporary ingest data (SIPs being ingested) 
location = RODA_HOME/data/ingest
# The location of the FTP home
ftpDropDirectory = RODA_HOME/data/ingest/FTP_DROP_DIR

quarantine = QUARANTINE

# The list of possible states  
states=DROPED_FTP,\
	DROPED_UPLOAD_SERVICE,\
	UNPACKED,\
	VIRUS_FREE,\
	SIP_VALID,\
	AUTHORIZED,\
	SIP_INGESTED,\
	SIP_NORMALIZED,\
	ACCEPTED

# Initial states
# All new SIPs must the dropped in one of these states
initialStates = DROPED_FTP, DROPED_UPLOAD_SERVICE

# Final states
# SIP terminate their processing when they reach one of these states 
finalStates = QUARANTINE, ACCEPTED

#
# Ingest tasks properties
#
# All tasks, except the initial tasks, must have at least, 2 properties: initialState and finalState.
# Initial tasks, tasks that put the SIP in one of the initial states, don't have an initial state.
# The values of these properties must be present in the list of states.
# Besides the initalState and finalState, a task can have as many properties as need.

# FTP Monitor Task
# No initialState, since this is one of the the first tasks.
pt.gov.dgarq.roda.plugins.ingest.MonitorFTPTaskPlugin.finalState = DROPED_FTP
pt.gov.dgarq.roda.plugins.ingest.MonitorFTPTaskPlugin.ftpDirectory = RODA_HOME/data/ingest/FTP_DROP_DIR

# Upload SIP Task
#pt.gov.dgarq.roda.core.services.SIPUploadTask.initialState = 
pt.gov.dgarq.roda.core.ingest.SIPUploadTask.finalState = DROPED_UPLOAD_SERVICE

# Move task plugin
pt.gov.dgarq.roda.plugins.ingest.MoveTaskPlugin.initialState = DROPED_FTP
pt.gov.dgarq.roda.plugins.ingest.MoveTaskPlugin.finalState = UNPACKED

# Unpack task plugin
pt.gov.dgarq.roda.plugins.ingest.UnpackTaskPlugin.initialState = DROPED_UPLOAD_SERVICE
pt.gov.dgarq.roda.plugins.ingest.UnpackTaskPlugin.finalState = UNPACKED

# Virus check task plugin (AVGAntiVirus is the default, no need to specify it)
pt.gov.dgarq.roda.plugins.ingest.virus.CheckVirusTaskPlugin.initialState = UNPACKED
pt.gov.dgarq.roda.plugins.ingest.virus.CheckVirusTaskPlugin.finalState = VIRUS_FREE
pt.gov.dgarq.roda.plugins.ingest.virus.CheckVirusTaskPlugin.antiVirusClassname = pt.gov.dgarq.roda.plugins.ingest.virus.ClamAntiVirus
#pt.gov.dgarq.roda.plugins.ingest.virus.CheckVirusTaskPlugin.antiVirusClassname = pt.gov.dgarq.roda.core.ingest.task.checkvirus.AVGAntiVirus

# Verify SIP coherence plugin
pt.gov.dgarq.roda.plugins.ingest.CheckSIPCoherenceTaskPlugin.initialState = VIRUS_FREE
pt.gov.dgarq.roda.plugins.ingest.CheckSIPCoherenceTaskPlugin.finalState = SIP_VALID

# Verify producer authorization plugin
pt.gov.dgarq.roda.plugins.ingest.CheckProducerAuthorizationTaskPlugin.initialState = SIP_VALID
pt.gov.dgarq.roda.plugins.ingest.CheckProducerAuthorizationTaskPlugin.finalState = AUTHORIZED

# Ingest SIP objects through RODA Client task plugin
pt.gov.dgarq.roda.plugins.ingest.CreateObjectsTaskPlugin.initialState = AUTHORIZED
pt.gov.dgarq.roda.plugins.ingest.CreateObjectsTaskPlugin.finalState = SIP_INGESTED

pt.gov.dgarq.roda.plugins.ingest.NormalizationTaskPlugin.initialState = SIP_INGESTED
pt.gov.dgarq.roda.plugins.ingest.NormalizationTaskPlugin.finalState = SIP_NORMALIZED
pt.gov.dgarq.roda.plugins.ingest.NormalizationTaskPlugin.propertiesFile = normalization.properties

# Accepts/Rejects a SIP already ingested
pt.gov.dgarq.roda.core.ingest.AcceptSIPTask.initialState = SIP_NORMALIZED
pt.gov.dgarq.roda.core.ingest.AcceptSIPTask.finalState = ACCEPTED


pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectDroppedFtpSIPsTaskPlugin.initialState = DROPED_FTP
pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectDroppedFtpSIPsTaskPlugin.finalState = UNPACKED

pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectDroppedUploadServiceSIPsTaskPlugin.initialState = DROPED_UPLOAD_SERVICE
pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectDroppedUploadServiceSIPsTaskPlugin.finalState = UNPACKED

pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectUnpackedSIPsTaskPlugin.initialState = UNPACKED
pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectUnpackedSIPsTaskPlugin.finalState = VIRUS_FREE

pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectVirusFreeSIPsTaskPlugin.initialState = VIRUS_FREE
pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectVirusFreeSIPsTaskPlugin.finalState = SIP_VALID

pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectValidSIPsTaskPlugin.initialState = SIP_VALID
pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectValidSIPsTaskPlugin.finalState = AUTHORIZED

pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectAuthorizedSIPsTaskPlugin.initialState = AUTHORIZED
pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectAuthorizedSIPsTaskPlugin.finalState = SIP_INGESTED

pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectIngestedSIPsTaskPlugin.initialState = SIP_INGESTED
pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectIngestedSIPsTaskPlugin.finalState = SIP_NORMALIZED

pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectNormalizedSIPsTaskPlugin.initialState = SIP_NORMALIZED
pt.gov.dgarq.roda.plugins.maintenance.ingest.RejectNormalizedSIPsTaskPlugin.finalState = ACCEPTED

